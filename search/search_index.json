{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Coffy Machine","text":"<p>This is the documentation for Coffy's web service.</p>"},{"location":"#install","title":"Install","text":""},{"location":"#binaries","title":"Binaries","text":"<p>Reference binaries for different OS architectures here.</p>"},{"location":"#compile-from-source","title":"Compile from source","text":"<p>Clone the repo first:</p> <pre><code>git clone git@github.com:sven1103/coffy-machine.git\n</code></pre> <p>Then check the required Go version in <code>./go.mod</code> (e.g. 'go 1.23').  Make sure you have the required Go version installed:</p> <pre><code>&gt; go version  \ngo version go1.23.4 darwin/arm64\n</code></pre> <p>If not, visit the Go website and do so.</p> <p>Coffy Machine uses swag for automated Swagger 2.0 documentation. So please install <code>swag</code> first:</p> <pre><code>go install github.com/swaggo/swag/cmd/swag@latest\n</code></pre> <p>and then run in the projects root directory:</p> <pre><code>swag init .\n</code></pre> <p>This should create a <code>./docs</code> folder with this content:</p> <pre><code>.docs/\n   docs.go\n   swagger.json\n   swagger.yaml\n</code></pre> <p>Then compile the source code with:</p> <pre><code>go build -o coffy-machine main.go\n</code></pre> <p>Then make it executable if not yet, e.g. under macOS or Linux:</p> <pre><code>chmod +x coffy-machine\n</code></pre>"},{"location":"#verify-installation","title":"Verify installation","text":"<p>You can just try to run the web service with the example configuration <code>example_config.yaml</code>:</p> <pre><code>./coffy-machine -c example_config.yaml\n</code></pre> <p>That's it \ud83d\ude80</p>"},{"location":"api/","title":"API","text":""},{"location":"api/#locally","title":"Locally","text":"<p>The API documentation is build with Swagger and is available under http://localhost:8080/swagger/index.html.</p> <p>If you have changed the default server port <code>8080</code>, make sure to adjust it in the above URL.</p>"},{"location":"api/#endpoints","title":"Endpoints","text":"<p>Currently, the following endpoints are available. More might come:</p> <ul> <li>/accounts</li> <li>/consume</li> <li>/coffee</li> </ul>"},{"location":"api/#accounts","title":"/accounts","text":"<p>Endpoint for creating accounts available in Coffy Machine. Consume requests need a referenced account ID to charge an account. </p>"},{"location":"api/#consume","title":"/consume","text":"<p>Endpoint for charging accounts with coffee consumption.</p>"},{"location":"api/#coffee","title":"/coffee","text":"<p>Endpoint for creating or updating available coffee products in Coffy Machine.</p>"},{"location":"setup/","title":"Setup","text":""},{"location":"setup/#configuration-file","title":"Configuration file","text":"<p>Coffy Machine expects a configuration file on startup. You can take the provided example one <code>example_config.yaml</code> for starters and then start to adjust it to your needs.</p>"},{"location":"setup/#server","title":"Server","text":"<p>Currently, you can only change the port that Coffy Machine listens to incoming HTTP requests (default: <code>8080</code>):</p> <pre><code>server:\n  port: 8080 # Change to your requirements\n</code></pre>"},{"location":"setup/#database","title":"Database","text":"<p>To ensure Coffy Machine's simplicity to setup and run, currently only SQLite is supported and creates a file on the host's filesystem.</p> <p>The default will create a database file in the current working directory.</p> <p>Of course, you can set any path to the host's filesystem. Ensure Coffy Machine can  access the target directory.</p> <pre><code>database:\n  path: ./coffy_machine.db # The default, change it if needed\n</code></pre>"}]}